events {}
http {
	# See http://nginx.org/en/docs/http/websocket.html
	map $http_upgrade $connection_upgrade {
		default upgrade;
		''      close;
	}

	server {
		listen 80;
		listen [::]:80;
		
		# Uncomment to enable SSL
		#listen 443 ssl;
		#listen [::]:443 ssl;
		#ssl_certificate     /etc/letsencrypt/live/<your-domain>/fullchain.pem;
		#ssl_certificate_key /etc/letsencrypt/live/<your-domain>/privkey.pem;

		location /.well-known {
		        root /etc/letsencrypt/webroot;
		}

		location /prometheus/ {
			rewrite ^/prometheus/(.*)$ /$1 break;

			# Proxy configuration.
			proxy_pass http://prometheus:9090;
			proxy_http_version 1.1;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header Host $host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_cache_bypass $http_upgrade;

			# Gateway timeout.
			proxy_read_timeout 30s;
			proxy_send_timeout 30s;
	
		}

		location /grafana/ {
			# rewrite ^/grafana/(.*)$ /$1 break; # NOT NEEDED, grafana configured as a subdomain

			# Proxy configuration.
			proxy_pass http://grafana:3000;
			proxy_http_version 1.1;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header Host $host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_cache_bypass $http_upgrade;

			# Gateway timeout.
			proxy_read_timeout 30s;
			proxy_send_timeout 30s;
	
		}

		location /monitoring/ {
			rewrite ^/monitoring/(.*)$ /$1 break;

			# Proxy configuration.
			proxy_pass http://graphnode-query-1:8030;
			proxy_http_version 1.1;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header Host $host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_cache_bypass $http_upgrade;

			# Gateway timeout.
			proxy_read_timeout 30s;
			proxy_send_timeout 30s;
		}

		location /metrics/ {
			rewrite ^/metrics/(.*)$ /$1 break;

			# Proxy configuration.
			proxy_pass http://graphnode-indexer-1:8040;
			proxy_http_version 1.1;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header Host $host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_cache_bypass $http_upgrade;

			# Gateway timeout.
			proxy_read_timeout 30s;
			proxy_send_timeout 30s;
		}


		location / {
			# Move WebSocket and HTTP requests into /ws/ and /http/ prefixes;
			# this allows us to forward both types of requests to different
			# query node ports
			if ( $connection_upgrade  = "upgrade" ) { rewrite ^(.*)$ /ws/$1; }
			if ( $connection_upgrade != "upgrade" ) { rewrite ^(.*)$ /http/$1; }

			location /http {
				# Remove the /http/ again
				rewrite ^/http/(.*)$ $1 break;

				# Proxy configuration.
				proxy_pass http://graphnode-query-1:8000;
				proxy_http_version 1.1;
				proxy_set_header Connection $connection_upgrade;
				proxy_set_header Host $host;
				proxy_set_header Upgrade $http_upgrade;
				proxy_cache_bypass $http_upgrade;

				# Gateway timeout.
				proxy_read_timeout 30s;
				proxy_send_timeout 30s;
			}

			location /ws {
				# Remove the /ws/ again
				rewrite ^/ws/(.*)$ $1 break;

				# Proxy configuration.
				proxy_pass http://graphnode-query-1:8001;
				proxy_http_version 1.1;
				proxy_set_header Connection $connection_upgrade;
				proxy_set_header Host $host;
				proxy_set_header Upgrade $http_upgrade;
				proxy_cache_bypass $http_upgrade;

				# Gateway timeout.
				proxy_read_timeout 3600s;
				proxy_send_timeout 3600s;
			}
		}
	}
}

